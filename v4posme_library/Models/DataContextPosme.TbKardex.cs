//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 3/1/2025 3:48:59 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

#nullable enable annotations
#nullable disable warnings

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;

namespace v4posme_library.Models
{
    public partial class TbKardex {

        public TbKardex()
        {
            this.ItemID = 0;
            this.CompanyID = 0;
            this.BranchID = 0;
            this.WarehouseID = 0;
            this.Sign = 0;
            this.OldQuantity = 0.0000m;
            this.OldCost = 0.0000m;
            this.TransactionQuantity = 0.0000m;
            this.TransactionCost = 0.0000m;
            this.NewQuantity = 0.0000m;
            this.NewCost = 0.0000m;
            this.QuantityInWarehouseCurrent = 0.0000m;
            this.QuantityInCurrent = 0.0000m;
            OnCreated();
        }

        public TbKardex(int kardexID, int? kardexCode, DateTime? kardexDate, int? transactionID, int? transactionMasterID, int? transactionDetailID, DateTime movementOn, decimal? oldQuantityWarehouse, decimal? oldCostWarehouse, decimal? newQuantityWarehouse, decimal? newCostWarehouse) : this()        {
            this.KardexID = kardexID;
            this.KardexCode = kardexCode;
            this.KardexDate = kardexDate;
            this.TransactionID = transactionID;
            this.TransactionMasterID = transactionMasterID;
            this.TransactionDetailID = transactionDetailID;
            this.MovementOn = movementOn;
            this.OldQuantityWarehouse = oldQuantityWarehouse;
            this.OldCostWarehouse = oldCostWarehouse;
            this.NewQuantityWarehouse = newQuantityWarehouse;
            this.NewCostWarehouse = newCostWarehouse;
        }

        [Key]
        [Required()]
        public int KardexID { get; set; }

        [Required()]
        public int ItemID { get; set; }

        [Required()]
        public int CompanyID { get; set; }

        [Required()]
        public int BranchID { get; set; }

        [Required()]
        public int WarehouseID { get; set; }

        public int? KardexCode { get; set; }

        public DateTime? KardexDate { get; set; }

        [Required()]
        public int Sign { get; set; }

        public int? TransactionID { get; set; }

        public int? TransactionMasterID { get; set; }

        public int? TransactionDetailID { get; set; }

        [Required()]
        public DateTime MovementOn { get; set; }

        [Required()]
        public decimal OldQuantity { get; set; }

        public decimal? OldQuantityWarehouse { get; set; }

        [Required()]
        public decimal OldCost { get; set; }

        public decimal? OldCostWarehouse { get; set; }

        [Required()]
        public decimal TransactionQuantity { get; set; }

        [Required()]
        public decimal TransactionCost { get; set; }

        [Required()]
        public decimal NewQuantity { get; set; }

        public decimal? NewQuantityWarehouse { get; set; }

        [Required()]
        public decimal NewCost { get; set; }

        public decimal? NewCostWarehouse { get; set; }

        [Required()]
        public decimal QuantityInWarehouseCurrent { get; set; }

        [Required()]
        public decimal QuantityInCurrent { get; set; }

        #region Extensibility Method Definitions

        partial void OnCreated();

        #endregion
    }

}

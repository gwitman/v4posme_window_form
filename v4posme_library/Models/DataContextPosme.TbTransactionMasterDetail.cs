//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 22/12/2024 9:47:43 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

#nullable enable annotations
#nullable disable warnings

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;

namespace v4posme_library.Models
{
    public partial class TbTransactionMasterDetail {

        public TbTransactionMasterDetail()
        {
            this.CompanyID = 0;
            this.TransactionID = 0;
            this.TransactionMasterID = 0;
            this.ItemFormulatedApplied = false;
            this.TypePriceID = 0;
            this.SkuCatalogItemID = 0;
            this.SkuQuantity = 0.00m;
            this.SkuQuantityBySku = 0.00m;
            this.AmountCommision = 0.00000000m;
            OnCreated();
        }

        public TbTransactionMasterDetail(int transactionMasterDetailID, int? componentID, int? componentItemID, int? promotionID, decimal? amount, decimal? cost, decimal? quantity, decimal? discount, decimal? unitaryAmount, decimal? tax1, decimal? tax2, decimal? tax3, decimal? tax4, decimal? unitaryCost, decimal? unitaryPrice, string? reference1, string? reference2, string? reference3, string? reference4, string? reference5, string? reference6, string? reference7, string? descriptionReference, decimal? exchangeRateReference, int? catalogStatusID, int? inventoryStatusID, bool? isActive, decimal? quantityStock, decimal? quantiryStockInTraffic, decimal? quantityStockUnaswared, decimal? remaingStock, string? lote, DateTime? expirationDate, int? inventoryWarehouseSourceID, int? inventoryWarehouseTargetID, string? skuFormatoDescription, string? itemNameLog, string? itemNameDescriptionLog) : this()        {
            this.TransactionMasterDetailID = transactionMasterDetailID;
            this.ComponentID = componentID;
            this.ComponentItemID = componentItemID;
            this.PromotionID = promotionID;
            this.Amount = amount;
            this.Cost = cost;
            this.Quantity = quantity;
            this.Discount = discount;
            this.UnitaryAmount = unitaryAmount;
            this.Tax1 = tax1;
            this.Tax2 = tax2;
            this.Tax3 = tax3;
            this.Tax4 = tax4;
            this.UnitaryCost = unitaryCost;
            this.UnitaryPrice = unitaryPrice;
            this.Reference1 = reference1;
            this.Reference2 = reference2;
            this.Reference3 = reference3;
            this.Reference4 = reference4;
            this.Reference5 = reference5;
            this.Reference6 = reference6;
            this.Reference7 = reference7;
            this.DescriptionReference = descriptionReference;
            this.ExchangeRateReference = exchangeRateReference;
            this.CatalogStatusID = catalogStatusID;
            this.InventoryStatusID = inventoryStatusID;
            this.IsActive = isActive;
            this.QuantityStock = quantityStock;
            this.QuantiryStockInTraffic = quantiryStockInTraffic;
            this.QuantityStockUnaswared = quantityStockUnaswared;
            this.RemaingStock = remaingStock;
            this.Lote = lote;
            this.ExpirationDate = expirationDate;
            this.InventoryWarehouseSourceID = inventoryWarehouseSourceID;
            this.InventoryWarehouseTargetID = inventoryWarehouseTargetID;
            this.SkuFormatoDescription = skuFormatoDescription;
            this.ItemNameLog = itemNameLog;
            this.ItemNameDescriptionLog = itemNameDescriptionLog;
        }

        [Key]
        [Required()]
        public int TransactionMasterDetailID { get; set; }

        [Required()]
        public int CompanyID { get; set; }

        [Required()]
        public int TransactionID { get; set; }

        [Required()]
        public int TransactionMasterID { get; set; }

        public int? ComponentID { get; set; }

        public int? ComponentItemID { get; set; }

        public int? PromotionID { get; set; }

        public decimal? Amount { get; set; }

        public decimal? Cost { get; set; }

        public decimal? Quantity { get; set; }

        public decimal? Discount { get; set; }

        public decimal? UnitaryAmount { get; set; }

        public decimal? Tax1 { get; set; }

        public decimal? Tax2 { get; set; }

        public decimal? Tax3 { get; set; }

        public decimal? Tax4 { get; set; }

        public decimal? UnitaryCost { get; set; }

        public decimal? UnitaryPrice { get; set; }

        [StringLength(250)]
        public string? Reference1 { get; set; }

        [StringLength(250)]
        public string? Reference2 { get; set; }

        [StringLength(250)]
        public string? Reference3 { get; set; }

        [StringLength(250)]
        public string? Reference4 { get; set; }

        [StringLength(250)]
        public string? Reference5 { get; set; }

        [StringLength(250)]
        public string? Reference6 { get; set; }

        [StringLength(250)]
        public string? Reference7 { get; set; }

        [StringLength(800)]
        public string? DescriptionReference { get; set; }

        public decimal? ExchangeRateReference { get; set; }

        public int? CatalogStatusID { get; set; }

        public int? InventoryStatusID { get; set; }

        public bool? IsActive { get; set; }

        public decimal? QuantityStock { get; set; }

        public decimal? QuantiryStockInTraffic { get; set; }

        public decimal? QuantityStockUnaswared { get; set; }

        public decimal? RemaingStock { get; set; }

        [StringLength(255)]
        public string? Lote { get; set; }

        public DateTime? ExpirationDate { get; set; }

        public int? InventoryWarehouseSourceID { get; set; }

        public int? InventoryWarehouseTargetID { get; set; }

        [Required()]
        public bool ItemFormulatedApplied { get; set; }

        [Required()]
        public int TypePriceID { get; set; }

        [Required()]
        public int SkuCatalogItemID { get; set; }

        [Required()]
        public decimal SkuQuantity { get; set; }

        [Required()]
        public decimal SkuQuantityBySku { get; set; }

        [StringLength(255)]
        public string? SkuFormatoDescription { get; set; }

        [StringLength(255)]
        public string? ItemNameLog { get; set; }

        [Required()]
        public decimal AmountCommision { get; set; }

        [StringLength(500)]
        public string? ItemNameDescriptionLog { get; set; }

        #region Extensibility Method Definitions

        partial void OnCreated();

        #endregion
    }

}
